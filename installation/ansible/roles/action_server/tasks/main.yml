---
- name: Install required packages
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - systemd
    - curl
    - build-essential
    - libbluetooth-dev

- name: Is NodeJS installed?
  ansible.builtin.command: node --version
  register: node_version
  ignore_errors: yes
  changed_when: false

- name: Download setup_18.x file to tmp directory
  ansible.builtin.get_url:
    url: https://deb.nodesource.com/setup_18.x
    dest: /tmp/
    mode: 0766
  when: node_version.rc != 0

- name: Execute setup_18.x script
  become: true
  ansible.builtin.shell: /tmp/setup_18.x
  when: node_version.rc != 0

- name: Remove setup_18.x file
  ansible.builtin.file:
    path: /tmp/setup_18.x
    state: absent
  when: node_version.rc != 0

- name: Install NodeJS
  become: true
  ansible.builtin.package:
    name: nodejs
    state: present

- name: Add env file for action server
  ansible.builtin.copy:
    src: files/env_action_server
    dest: /opt/homehome/action-server/env_action_server
    mode: 0644

- name: Install dependencies
  community.general.npm:
    path: /opt/homehome/action-server

- name: Create action_server service
  become: true
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Action Server

      [Service]
      Type=simple
      User={{ ansible_user_id }}
      WorkingDirectory=/opt/homehome/action-server
      ExecStart=/usr/bin/npm start
      Restart=on-failure
      EnvironmentFile=

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/action_server.service
    mode: 0644
  notify: Reload the SystemD to re-read configurations

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable the service and start
  become: yes
  ansible.builtin.systemd:
    name: action_server
    enabled: yes
    state: restarted
  changed_when: false
