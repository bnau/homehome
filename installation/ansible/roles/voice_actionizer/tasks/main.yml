---
- name: Add current user to audio group
  become: yes
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: audio
    append: yes

- name: Add deadsnakes PPA
  become: yes
  ansible.builtin.apt_repository:
    repo: ppa:deadsnakes/ppa
    state: present

- name: Install required packages
  become: yes
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - systemd
    - curl
    - unzip
    - python3.12
    - python3.12-venv
    - python3.12-dev
    - build-essential
    - portaudio19-dev
    - pulseaudio
    - espeak
    - ffmpeg
    - libespeak1
    - alsa-utils

- name: Ensure driving.stt model directory exists.
  ansible.builtin.file:
    dest: /opt/homehome/voice-actionizer/driving/stt/model
    mode: 0766
    state: directory

- name: Download and unzip stt model
  ansible.builtin.unarchive:
    src: https://alphacephei.com/vosk/models/vosk-model-small-fr-0.22.zip
    dest: /tmp
    mode: 0766
    remote_src: yes
    creates: /tmp/vosk-model-small-fr-0.22

- name: Move stt model
  ansible.builtin.shell:
    cmd: mv /tmp/vosk-model-small-fr-0.22/* /opt/homehome/voice-actionizer/driving/stt/model
    creates: /opt/homehome/voice-actionizer/driving/stt/model/am

- name: Create voice_actionizer service
  become: yes
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Voice actionizer
      Requires=sound.target
      After=sound.target

      [Service]
      Type=simple
      User={{ ansible_user_id }}
      WorkingDirectory=/opt/homehome/voice-actionizer
      ExecStart=/opt/homehome/voice-actionizer/venv/bin/python -m driving.stt.main
      Restart=on-failure
      Environment="XDG_RUNTIME_DIR=/run/user/1000"
      Environment="PULSE_SERVER=unix:/mnt/wslg/PulseServer"

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/voice_actionizer.service
    mode: 0644
  notify: Reload the SystemD to re-read configurations

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Create virtual environment
  ansible.builtin.command: python3.12 -m venv /opt/homehome/voice-actionizer/venv
  args:
    creates: /opt/homehome/voice-actionizer/venv

- name: Upgrade pip
  ansible.builtin.command: /opt/homehome/voice-actionizer/venv/bin/python -m pip install --upgrade pip
  changed_when: false

- name: Upgrade setuptools
  ansible.builtin.command: /opt/homehome/voice-actionizer/venv/bin/python -m pip install --upgrade setuptools
  changed_when: false

- name: Install dependencies
  ansible.builtin.command: /opt/homehome/voice-actionizer/venv/bin/python -m pip install -r /opt/homehome/voice-actionizer/requirements.txt
  changed_when: false

- name: Enable the service and start
  become: yes
  ansible.builtin.systemd:
    name: voice_actionizer
    enabled: yes
    state: restarted
  changed_when: false
